{
	"info": {
		"_postman_id": "5fcd3d09-2573-4d62-a96c-09c946b9e165",
		"name": "Categorias",
		"description": "API REST\n\n.../categorias:\n\nmethod's post, get and put",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "18027182"
	},
	"item": [
		{
			"name": "Post categorias (categoria on body)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Tests para verificar el body de la respuesta recibida\r",
							"pm.test(\"Agregar categoría\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.titulo).to.eql(\"titulo1\");\r",
							"  pm.expect(responseJson.descripcion).to.eql(\"descripcion1\");\r",
							"  pm.expect(responseJson.url).to.eql(\"url1\");\r",
							"});\r",
							"pm.test(\"El id no puede ser null\", ()=>{\r",
							"      const responseJson = pm.response.json();\r",
							"      pm.expect(responseJson.id_categoria).to.be.a(\"number\");\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"titulo\": \"titulo1\",\r\n    \"descripcion\": \"descripcion1\",\r\n    \"url\": \"url1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{servidor}}/categorias/agregar"
			},
			"response": []
		},
		{
			"name": "Get categorias",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test para verificar el estado de las respuestas\r",
							"pm.test(\"Respuesta exitosa\", () => {\r",
							"  pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"// Tests para verificar el body de la respuesta recibida\r",
							"pm.test(\"La respuesta trae un array de objetos\", ()=>{\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson).to.be.an(\"array\");\r",
							"})\r",
							"pm.test(\"El primer objeto del array está completo\",()=>{\r",
							"      const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson[0].id_categoria).to.be.a(\"number\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{servidor}}/categorias/listarTodos"
			},
			"response": []
		},
		{
			"name": "Get categoria by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test para verificar el estado de la respuesta recibida\r",
							"pm.test(\"Respuesta exitosa\", () => {\r",
							"  pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"// Tests para verificar el body de la respuesta recibida\r",
							"pm.test(\"El objeto corresponde al id consultado\",()=>{\r",
							"      const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.id_categoria).to.eql(1);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{servidor}}/categorias/1"
			},
			"response": []
		},
		{
			"name": "Put actualizar categoria (categoria con id en body)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test para verificar el body de la respuesta recibida\r",
							"pm.test(\"Los campos fueron modificados exitosamente \", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.titulo).to.eql(\"nuevo\");\r",
							"  pm.expect(responseJson.url).to.eql(\"nuevo\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "    {\r\n        \"id\":1,\r\n        \"titulo\": \"nuevo\",\r\n        \"descripcion\": \"nuevo\",\r\n        \"url\": \"nuevo\"\r\n    }"
				},
				"url": "{{servidor}}/categorias/actualizar"
			},
			"response": []
		},
		{
			"name": "Put actualizar categoria (categoria con id en body) id inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Tests para verificar el estado de la respuesta\r",
							"pm.test(\"Internal Server Error: no se puede eliminar id inexistente\", () => {\r",
							"  pm.expect(pm.response.code).to.be.oneOf([500]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "    {\r\n        \"id\":100,\r\n        \"titulo\": \"nuevo\",\r\n        \"descripcion\": \"nuevo\",\r\n        \"url\": \"nuevo\"\r\n    }"
				},
				"url": "{{servidor}}/categorias/actualizar"
			},
			"response": []
		},
		{
			"name": "Get categorias después del Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Tests que verifican respuestas recibidas\r",
							"pm.test(\"Respuesta exitosa\", () => {\r",
							"  pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"// Tests para verificar múltiples assertions\r",
							"pm.test(\"La respuesta tiene todas las propiedades\", () => {\r",
							"    //pareseamos el response y buscamos si tiene varias propiedades \r",
							"    // En este caso como es un array de objetos, consultamos solamente el de la posición [0]\r",
							"    const responseJson = pm.response.json()[0];\r",
							"    pm.expect(responseJson.titulo).to.eql('titulo1');\r",
							"    pm.expect(responseJson.descripcion).to.be.a('string');\r",
							"    pm.expect(responseJson.id_categoria).to.have.lengthOf(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{servidor}}/categorias/listarTodos"
			},
			"response": []
		},
		{
			"name": "Delete categoria ( id en url)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Tests para verificar el estado de la respuesta\r",
							"pm.test(\"Respuesta exitosa\", () => {\r",
							"  pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"// Test para verificar que haya un encabezado de respuesta\r",
							"pm.test(\"Content-Type está presente en el header\", () => {\r",
							"  pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "    {\r\n        \"id_categorias\": 7,\r\n        \"titulo\": \"Hotel lujoso\",\r\n        \"descripcion\": \"edificio con habitaciones disponibles para más de 50 personas\",\r\n        \"url_imagen\": null\r\n    }"
				},
				"url": "{{servidor}}/categorias/eliminar/2"
			},
			"response": []
		},
		{
			"name": "Delete categoria ( id en url) id inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Tests para verificar el estado de la respuesta\r",
							"pm.test(\"Internal Server Error: no se puede eliminar id inexistente\", () => {\r",
							"  pm.expect(pm.response.code).to.be.oneOf([500]);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "    {\r\n        \"id_categorias\": 7,\r\n        \"titulo\": \"Hotel lujoso\",\r\n        \"descripcion\": \"edificio con habitaciones disponibles para más de 50 personas\",\r\n        \"url_imagen\": null\r\n    }"
				},
				"url": "{{servidor}}/categorias/eliminar/200"
			},
			"response": []
		},
		{
			"name": "Get categorias después del Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test para verificar el tipo de contenido que hay en el header de la respuesta recibida\r",
							"pm.test(\"Content-Type en el header es application/json\", () => {\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{servidor}}/categorias/listarTodos"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "servidor",
			"value": "localhost:8080/",
			"type": "string"
		}
	]
}